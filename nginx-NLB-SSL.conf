-----------------------------------------------------------------------------------------------
upstream backend {
    server 127.0.0.1:8000;
    server 127.0.0.1:8001;
}

server {
    server_name dutchecker.ddns.net;

    location / {
        proxy_pass http://127.0.0.1:3000/;  # Forward to React app running on port 3000
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/ {
        proxy_pass http://backend/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /ai/ {
        proxy_pass http://127.0.0.1:5000/ai/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /ws/chat/ {
        proxy_pass http://127.0.0.1:8002/ws/chat/;  # Forward WebSocket chat directly to port 8000
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location /ws/attendance/ {
        proxy_pass http://127.0.0.1:8002/ws/attendance/;  # Forward WebSocket attendance directly to port 8000
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location /ws/user/status/ {
        proxy_pass http://127.0.0.1:8002/ws/user/status/;  # Forward WebSocket status directly to port 8000
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/dutchecker.ddns.net/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/dutchecker.ddns.net/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = dutchecker.ddns.net) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;
    server_name dutchecker.ddns.net;
    return 404; # managed by Certbot
}

-----------------------------------------------------------------------------------------------





Đầu vào chính (React app):

URL: http://dutchecker.ddns.net/
Chuyển hướng đến: http://127.0.0.1:3000 (React app)
Backend Django:

URL: http://dutchecker.ddns.net/backend
Chuyển hướng đến: http://backend (upstream backend với các máy chủ 127.0.0.1:8001 và 127.0.0.1:8002)
Flask AI Backend:

URL: http://dutchecker.ddns.net/ai
Chuyển hướng đến: http://127.0.0.1:5000 (Flask AI backend)
WebSocket Chat:

URL: ws://dutchecker.ddns.net/ws/chat/
Chuyển hướng đến: http://backend với cấu hình để hỗ trợ kết nối WebSocket.
WebSocket Attendance:

URL: ws://dutchecker.ddns.net/ws/attendance/
Chuyển hướng đến: http://backend với cấu hình để hỗ trợ kết nối WebSocket.
WebSocket User Status:

URL: ws://dutchecker.ddns.net/ws/user/status/
Chuyển hướng đến: http://backend với cấu hình để hỗ trợ kết nối WebSocket.
Lưu ý rằng các kết nối WebSocket sử dụng giao thức ws thay vì http và sử dụng proxy_http_version 1.1;, proxy_set_header Upgrade $http_upgrade;, và proxy_set_header Connection "upgrade"; để hỗ trợ kết nối WebSocket. Các yêu cầu ws được chuyển hướng đến cổng 80 của Nginx và sau đó được chuyển hướng đến backend theo cấu hình.



map $http_upgrade $connection_upgrade: Đây là một chỉ thị map trong Nginx để xác định giá trị của biến $connection_upgrade dựa trên giá trị của biến $http_upgrade. Nếu $http_upgrade có giá trị là "upgrade", thì $connection_upgrade sẽ có giá trị là "upgrade", nếu không, nó sẽ có giá trị là "close".

Trong các location block cho các WebSocket (/ws/chat/, /ws/attendance/, /ws/user/status/), chúng ta đã thêm proxy_set_header Upgrade $http_upgrade; và proxy_set_header Connection $connection_upgrade;. Điều này cần thiết để giữ mở kết nối WebSocket thông qua Nginx.

Location block cho /ws/chat/, /ws/attendance/, /ws/user/status/ đều có proxy_pass http://backend; để chuyển hướng các kết nối WebSocket đến backend.

Trong các location block cho /, /backend, /ai, chúng ta vẫn giữ nguyên cấu hình proxy pass cho các dịch vụ khác.

Location block cho / (React app) có proxy_http_version 1.1; để sử dụng HTTP/1.1 khi chuyển tiếp yêu cầu tới React app.

Location block cho / cũng giữ nguyên các cài đặt proxy_set_header để chuyển tiếp các header như Host, X-Real-IP, X-Forwarded-For, và X-Forwarded-Proto.

Listen block cho 443 có SSL, và sử dụng chứng chỉ SSL từ Lets Encrypt.

Listen block cho 80 là để redirect từ HTTP sang HTTPS.

Những cấu hình trên nhằm mục đích giữ cho kết nối WebSocket mở khi thông qua Nginx, giúp tránh tình trạng đóng mở kết nối thường gặp khi sử dụng cân bằng tải hoặc proxy thông thường. Cấu hình này giúp WebSocket có thể hoạt động ổn định qua Nginx.




"""
REACT_APP_API_URL=https://dutchecker.ddns.net/api/
REACT_APP_MEDIA_URL=https://dutchecker.ddns.net/media
REACT_APP_CHAT_WEBSOCKET_URL=wss://dutchecker.ddns.net/ws/chat/
REACT_APP_CHECK_IN_WEBSOCKET_URL=wss://dutchecker.ddns.net/ws/attendance/
REACT_APP_STATUS_WEBSOCKET_URL=wss://dutchecker.ddns.net/ws/user/status/
REACT_APP_AI_URL=https://dutchecker.ddns.net/ai/face-recognization
"""